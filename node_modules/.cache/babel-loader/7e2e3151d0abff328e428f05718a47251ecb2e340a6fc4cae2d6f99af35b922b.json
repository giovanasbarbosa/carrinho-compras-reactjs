{"ast":null,"code":"var _jsxFileName = \"/Users/giovanabarbosa/Documents/Estudos/carrinho-compras-react/src/components/Products/Products.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport './Products.css';\nimport fetchProducts from '../../api/fetchProducts';\nimport ProductCard from '../ProductCard/ProductCard';\nimport Loading from '../Loading/Loading';\nimport AppContext from '../../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  const {\n    products,\n    setProducts\n  } = useContext(AppContext);\n  useEffect(() => {\n    fetchProducts('iphone').then(response => {\n      setProducts(response);\n      setLoading(false);\n    });\n  }, []); //Sempre que a variável mudar de conteúdo, ele vai executar novamente. \n\n  return loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 17\n  }, this) || /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"products container\",\n    children: products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      data: product\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n_s(Products, \"8N1TR1Md79Hcv8NT1ERzdVW8d5M=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","useEffect","useContext","fetchProducts","ProductCard","Loading","AppContext","jsxDEV","_jsxDEV","Products","_s","products","setProducts","then","response","setLoading","loading","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","product","data","id","_c","$RefreshReg$"],"sources":["/Users/giovanabarbosa/Documents/Estudos/carrinho-compras-react/src/components/Products/Products.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport './Products.css';\nimport fetchProducts from '../../api/fetchProducts';\nimport ProductCard from '../ProductCard/ProductCard';\nimport Loading from '../Loading/Loading';\nimport AppContext from '../../context/AppContext';\n\nfunction Products(){\n\n  const {products, setProducts} = useContext(AppContext);\n\n  useEffect(()=>{\n    fetchProducts('iphone').then((response)=>{\n      setProducts(response);\n      setLoading(false);\n    });\n\n  }, []); //Sempre que a variável mudar de conteúdo, ele vai executar novamente. \n\n  return(\n    (loading && <Loading />) || ( \n      <section className='products container'> \n        {products.map((product) => <ProductCard key={product.id} data={product} />)} \n      </section> )\n\n  );\n}\n\nexport default Products;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAO,gBAAgB;AACvB,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAEjB,MAAM;IAACC,QAAQ;IAAEC;EAAW,CAAC,GAAGV,UAAU,CAACI,UAAU,CAAC;EAEtDL,SAAS,CAAC,MAAI;IACZE,aAAa,CAAC,QAAQ,CAAC,CAACU,IAAI,CAAEC,QAAQ,IAAG;MACvCF,WAAW,CAACE,QAAQ,CAAC;MACrBC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OACGC,OAAO,iBAAIR,OAAA,CAACH,OAAO;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,iBACrBZ,OAAA;IAASa,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EACpCX,QAAQ,CAACY,GAAG,CAAEC,OAAO,iBAAKhB,OAAA,CAACJ,WAAW;MAAkBqB,IAAI,EAAED;IAAQ,GAA1BA,OAAO,CAACE,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAG;AAGlB;AAACV,EAAA,CAnBQD,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAqBjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}